---
  - name: Set up ssh key for git
    copy:
      src: ../files/ssh-config
      dest: /home/d.romashov/.ssh/config
      owner: d.romashov
      group: wheel
      mode: 0644
      force: no

  - name: Check if romashov-tech repo exists
    stat:
      path: "{{ project_path }}"
    register: repo_exists_check

  - name: Clone romashov-tech repo
    ansible.builtin.git:
      repo: git@github.com:framebassman/romashov-tech.git
      dest: "{{ project_path }}"
      single_branch: no
      version: master
      accept_hostkey: yes
    when: not repo_exists_check.stat.exists

  - name: Reset all changes
    ansible.builtin.git:
      repo: git@github.com:framebassman/romashov-tech.git
      dest: "{{ project_path }}"
      version: master
      update: yes
      force: yes
      clone: no
      single_branch: no
      accept_hostkey: yes

  - name: Determine latest Docker Hub release
    become: false
    uri:
      url: "https://hub.docker.com/v2/repositories/framebassman/romashovtech-web/tags?page=1&page_size=1"
      body_format: json
    register: _dockerhub_release
    until: _dockerhub_release.status == 200
    retries: 5

  - name: Set romashov-tech-web_version
    set_fact:
      romashov_tech_web_version: "{{ _dockerhub_release.json.results[0].name }}"

  - name: Stop Deployment
    shell: "make stop-prod-{{ application }}"
    args:
      chdir: "{{ project_path }}"

  - name: Start Deployment
    shell: "BUILD_BUILDNUMBER={{ romashov_tech_web_version }} make start-prod-{{ application }}"
    args:
      chdir: "{{ project_path }}"

  - name: Cleanup docker images
    shell: make docker-cleanup -i
    args:
      chdir: "{{ project_path }}"

  - name: Remove unused docker images
    shell: docker image prune --all --force
